{"ast":null,"code":"var _jsxFileName = \"/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport './Signup.css';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      name: name,\n      username: username,\n      password: password,\n      password_confirmation: passwordConfirmation\n    };\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(json => {\n      // json.errors ? setErrors(Object.entries(json.errors)) : navigate('/about')\n      if (json.errors) setErrors(Object.entries(json.errors));\n    }); // need something like a ternary which says that\n\n    navigate('/about');\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"login-h3\",\n          children: \"Sign ur ass uPPP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          placeholder: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password_confirmation\",\n          placeholder: \"confirm password\",\n          value: passwordConfirmation,\n          onChange: e => setPasswordConfirmation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign up!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), errors ? errors.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: e[0] + ' : ' + e[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 40\n      }, this)) : null]\n    }, void 0, true) // </div>\n\n  );\n}\n\n_s(Signup, \"TW4y56b/pG0a6cRxP+tI+wDfDXU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js"],"names":["React","useState","useNavigate","Link","Signup","onLogin","navigate","username","setUsername","name","setName","password","setPassword","passwordConfirmation","setPasswordConfirmation","errors","setErrors","onSubmit","e","preventDefault","user","password_confirmation","fetch","method","headers","body","JSON","stringify","then","res","json","Object","entries","target","value","map"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\nimport './Signup.css'\nimport { useNavigate, Link } from \"react-router-dom\";\n\nexport default function Signup({ onLogin }) {\n\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [errors, setErrors] = useState([])\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            name: name,\n            username: username,\n            password: password,\n            password_confirmation: passwordConfirmation\n        }\n        fetch('http://localhost:3000/users', {\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n        })\n        .then(res => res.json())\n        .then(json => {\n            // json.errors ? setErrors(Object.entries(json.errors)) : navigate('/about')\n            if(json.errors) setErrors(Object.entries(json.errors))\n        })\n        // need something like a ternary which says that\n        navigate('/about')\n    }\n\n\n    return (\n        // <div>\n        <>\n            <form onSubmit={onSubmit} className=\"form\">\n                {/* <div className=\"container1\"> */}\n                    <h3 className=\"login-h3\">Sign ur ass uPPP</h3>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        />\n                    <input \n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"username\" \n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"password\" \n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password_confirmation\"\n                        placeholder=\"confirm password\" \n                        value={passwordConfirmation}\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\n                        />\n                    <button \n                        \n                        type=\"submit\">Sign up!\n                    </button>\n                {/* </div> */}\n            </form>\n            { errors ? errors.map(e => <div>{e[0]+' : ' + e[1]}</div>) : null}\n        </>\n        // </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}