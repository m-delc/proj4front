{"ast":null,"code":"var _jsxFileName = \"/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './Signup.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup() {\n  _s();\n\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    fetch('/something');\n  });\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    const user = {\n      name: name,\n      username: username,\n      password: password,\n      password_confirmation: passwordConfirmation\n    };\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(json => {\n      if (json.error) setErrors(Object.entries(json.error));\n    }); // need something like a ternary which says that\n    // if errors, stay on current page and render errors\n    // else, navigate\n\n    if (errors) {\n      return;\n    } else navigate('/about');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"login-h3\",\n        children: \"Sign ur ass uPPP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password_confirmation\",\n        placeholder: \"confirm password\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), errors ? errors.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: e[0] + ' : ' + e[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 40\n    }, this)) : null]\n  }, void 0, true);\n}\n\n_s(Signup, \"uQiZ6kxGtquQLeOyS/wXkilvEcc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js"],"names":["React","useState","useEffect","useNavigate","Signup","navigate","username","setUsername","name","setName","password","setPassword","passwordConfirmation","setPasswordConfirmation","errors","setErrors","fetch","onSubmit","e","preventDefault","user","password_confirmation","method","headers","body","JSON","stringify","then","res","json","error","Object","entries","target","value","map"],"mappings":"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","sourcesContent":["import { React, \n    useState,\n    useEffect } from 'react'\nimport './Signup.css'\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Signup() {\n\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [errors, setErrors] = useState([])\n\n    useEffect(() => {\n        fetch('/something')\n    })\n\n\n    function onSubmit(e){\n        e.preventDefault()\n        setErrors([])\n        const user = {\n            name: name,\n            username: username,\n            password: password,\n            password_confirmation: passwordConfirmation\n        }\n        fetch('http://localhost:3000/users', {\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n        })\n        .then(res => res.json())\n        .then(json => {\n            if(json.error) setErrors(Object.entries(json.error))\n        })\n        // need something like a ternary which says that\n        // if errors, stay on current page and render errors\n        // else, navigate\n        if(errors){\n            return\n        } else\n        navigate('/about')\n    }\n\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"form\">\n                {/* <div className=\"container1\"> */}\n                    <h3 className=\"login-h3\">Sign ur ass uPPP</h3>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        />\n                    <input \n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"username\" \n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"password\" \n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password_confirmation\"\n                        placeholder=\"confirm password\" \n                        value={passwordConfirmation}\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\n                        />\n                    <button \n                        \n                        type=\"submit\">Sign up!\n                    </button>\n                {/* </div> */}\n            </form>\n            { errors ? errors.map(e => <div>{e[0]+' : ' + e[1]}</div>) : null}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}