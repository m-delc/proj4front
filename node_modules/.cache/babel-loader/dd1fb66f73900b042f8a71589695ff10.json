{"ast":null,"code":"var _jsxFileName = \"/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport './Signup.css';\nimport { useNavigate } from \"react-router-dom\";\nimport Login from '../Login/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Signup(_ref) {\n  _s();\n\n  let {\n    setUser,\n    setIsAuthenticated\n  } = _ref;\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  CONST;\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    const user = {\n      name: name,\n      username: username,\n      password: password,\n      password_confirmation: passwordConfirmation\n    };\n    fetch('/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(user => {\n          setUser(user);\n          setIsAuthenticated(true);\n        });\n      } else {\n        res.json().then(json => setErrors(json.errors));\n      }\n    }); // need something like a ternary which says that\n    // if errors, stay on current page and render errors\n    // else, navigate\n    // if(errors){\n    //     return\n    // } else\n    // navigate('/about')\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"login-h3\",\n        children: \"Sign ur ass uPPP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password_confirmation\",\n        placeholder: \"confirm password\",\n        value: passwordConfirmation,\n        onChange: e => setPasswordConfirmation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), errors ? errors.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: e[0] + ' : ' + e[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 40\n    }, this)) : null]\n  }, void 0, true);\n}\n\n_s(Signup, \"TW4y56b/pG0a6cRxP+tI+wDfDXU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/michael/flatiron/phase-4/projects/front/src/Signup/Signup.js"],"names":["React","useState","useEffect","useNavigate","Login","Signup","setUser","setIsAuthenticated","navigate","username","setUsername","name","setName","password","setPassword","passwordConfirmation","setPasswordConfirmation","errors","setErrors","CONST","onSubmit","e","preventDefault","user","password_confirmation","fetch","method","headers","body","JSON","stringify","then","res","ok","json","target","value","map"],"mappings":"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","sourcesContent":["import { React, \n    useState,\n    useEffect } from 'react'\nimport './Signup.css'\nimport { useNavigate } from \"react-router-dom\";\nimport Login from '../Login/Login'\n\nexport default function Signup({ setUser, setIsAuthenticated }) {\n\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [errors, setErrors] = useState([])\n    CONST \n\n\n    function onSubmit(e){\n        e.preventDefault()\n        setErrors([])\n        const user = {\n            name: name,\n            username: username,\n            password: password,\n            password_confirmation: passwordConfirmation\n        }\n        fetch('/users', {\n            method:'POST',\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n        })\n        .then(res => {\n            if(res.ok) {\n                res.json()\n                .then(user => {\n                    setUser(user)\n                    setIsAuthenticated(true)\n                })\n            } else {\n                res.json()\n                .then(json => setErrors(json.errors))\n            }\n        })\n        // need something like a ternary which says that\n        // if errors, stay on current page and render errors\n        // else, navigate\n        // if(errors){\n        //     return\n        // } else\n        // navigate('/about')\n    }\n\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"form\">\n                {/* <div className=\"container1\"> */}\n                    <h3 className=\"login-h3\">Sign ur ass uPPP</h3>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        />\n                    <input \n                        type=\"text\"\n                        id=\"username\"\n                        placeholder=\"username\" \n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"password\" \n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        />\n                    <input \n                        type=\"password\"\n                        id=\"password_confirmation\"\n                        placeholder=\"confirm password\" \n                        value={passwordConfirmation}\n                        onChange={(e) => setPasswordConfirmation(e.target.value)}\n                        />\n                    <button \n                        \n                        type=\"submit\">Sign up!\n                    </button>\n                {/* </div> */}\n            </form>\n            { errors ? errors.map(e => <div>{e[0]+' : ' + e[1]}</div>) : null}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}